if(!require("tidyverse")){install.packages("tidyverse", dependencies = TRUE); require("tidyverse")}
if(!require("meta")){install.packages("meta", dependencies = TRUE); require("meta")}
# Set random seed
set.seed(1048596)
setwd("meta_results")
# Read in all WEAT results for individual types of text
acad = read.csv('acad_weat_results.csv')
blog = read.csv('blog_weat_results.csv')
fic = read.csv('fic_weat_results.csv')
mag = read.csv('mag_weat_results.csv')
news = read.csv('news_weat_results.csv')
spok = read.csv('spok_weat_results.csv')
tvm = read.csv('tvm_weat_results.csv')
web = read.csv('web_weat_results.csv')
# Concatenate all WEAT D scores as a single dataframe
all_tests <- rbind(acad, blog, fic, mag, news, spok, tvm, web)
# Store type of texts as a character vector for later use
category.names <- c('Academic Text', 'Blog', 'Fiction', 'Magazines',
'News Articles', 'Spoken Language', 'TV/Movie Subtitles', 'Web')
text.categories <- rep(category.names, each = 6)
# Filter test results pertaining to the superiority dimension
# Change the variable names to use the rma() function
superior <- all_tests %>%
filter(dimension == "Superiority") %>%
mutate(category = text.categories) %>%
rename(yi = effect) %>%
mutate(sei = (yi - lower)/1.96) %>%
mutate(test = paste(category, groups))
for(j in category.names){
print('-------------------------------------------------')
print(j)
print('-------------------------------------------------')
for(i in unique(superior$groups)){
superior.gen <- metagen(TE = yi, seTE = sei, studlab = category,
data = superior %>% filter(groups == i) %>% filter(category == j),
sm = "MD", fixed = FALSE, random = TRUE)
print(paste(i, ":", round(summary(superior.gen)[["TE.random"]], 2),
round(summary(superior.gen)[["lower"]], 2),
round(summary(superior.gen)[["upper"]], 2)))
}
}
unique(superior$groups)
for(i in unique(superior$groups)){
superior.gen <- metagen(TE = yi, seTE = sei, studlab = category,
data = superior %>% filter(groups == i),
sm = "MD", fixed = FALSE, random = TRUE)
print(paste(i, ":", round(summary(superior.gen)[["TE.random"]], 2),
round(summary(superior.gen)[["lower.random"]], 2),
round(summary(superior.gen)[["upper.random"]], 2)))
}
superior_meta_df <- NULL
for(i in unique(superior$groups)){
superior.gen <- metagen(TE = yi, seTE = sei, studlab = category,
data = superior %>% filter(groups == i),
sm = "MD", fixed = FALSE, random = TRUE)
superior_meta_df <- rbind(superior_meta_df,
c(summary(superior.gen)[["TE.random"]],
summary(superior.gen)[["lower.random"]],
summary(superior.gen)[["upper.random"]]))
}
superior_meta_df <- data.frame(cbind(unique(superior$groups), superior_meta_df))
colnames(superior_meta_df) <- c('groups', 'effect', 'lower', 'upper')
write.csv(superior_meta_df, 'superior_meta_estimate.csv', row.names = FALSE, quote = FALSE)
print('Summary Effect for Each Type of Text (k = 6)')
print('-------------------------------------------------')
for(j in genre){
superior.gen <- metagen(TE = yi, seTE = sei, studlab = groups,
data = superior %>% filter(category == j),
sm = "MD", fixed = FALSE, random = TRUE)
print(paste(j, ":", round(summary(superior.gen)[["TE.random"]], 2),
round(summary(superior.gen)[["lower.random"]], 2),
round(summary(superior.gen)[["upper.random"]], 2)))
}
for(j in category.names){
print('-------------------------------------------------')
print(j)
print('-------------------------------------------------')
for(i in unique(american$groups)){
american.gen <- metagen(TE = yi, seTE = sei, studlab = category,
data = american %>% filter(groups == i) %>% filter(category == j),
sm = "MD", fixed = FALSE, random = TRUE)
print(paste(i, ":", round(summary(american.gen)[["TE.random"]], 2),
round(summary(american.gen)[["lower"]], 2),
round(summary(american.gen)[["upper"]], 2)))
}
}
# Filter test results pertaining to the Americanness dimension
# Change the variable names to use the rma() function
american <- all_tests %>%
filter(dimension == "Americanness") %>%
mutate(category = category_names) %>%
rename(yi = effect) %>%
mutate(sei = (yi - lower)/1.96) %>%
mutate(test = paste(category, groups))
# Filter test results pertaining to the Americanness dimension
# Change the variable names to use the rma() function
american <- all_tests %>%
filter(dimension == "Americanness") %>%
mutate(category = text_categories) %>%
rename(yi = effect) %>%
mutate(sei = (yi - lower)/1.96) %>%
mutate(test = paste(category, groups))
# Filter test results pertaining to the Americanness dimension
# Change the variable names to use the rma() function
american <- all_tests %>%
filter(dimension == "Americanness") %>%
mutate(category = text.categories) %>%
rename(yi = effect) %>%
mutate(sei = (yi - lower)/1.96) %>%
mutate(test = paste(category, groups))
for(j in category.names){
print('-------------------------------------------------')
print(j)
print('-------------------------------------------------')
for(i in unique(american$groups)){
american.gen <- metagen(TE = yi, seTE = sei, studlab = category,
data = american %>% filter(groups == i) %>% filter(category == j),
sm = "MD", fixed = FALSE, random = TRUE)
print(paste(i, ":", round(summary(american.gen)[["TE.random"]], 2),
round(summary(american.gen)[["lower"]], 2),
round(summary(american.gen)[["upper"]], 2)))
}
}
print('-------------------------------------------------')
print('Summary Effect for Each Group Comparison (k = 8)')
print('-------------------------------------------------')
for(i in unique(american$groups)){
american.gen <- metagen(TE = yi, seTE = sei, studlab = category,
data = american %>% filter(groups == i),
sm = "MD", fixed = FALSE, random = TRUE)
print(paste(i, ":", round(summary(american.gen)[["TE.random"]], 2),
round(summary(american.gen)[["lower.random"]], 2),
round(summary(american.gen)[["upper.random"]], 2)))
}
american_meta_df <- NULL
for(i in unique(american$groups)){
american.gen <- metagen(TE = yi, seTE = sei, studlab = category,
data = american %>% filter(groups == i),
sm = "MD", fixed = FALSE, random = TRUE)
american_meta_df <- rbind(american_meta_df,
c(summary(american.gen)[["TE.random"]],
summary(american.gen)[["lower.random"]],
summary(american.gen)[["upper.random"]]))
}
american_meta_df <- data.frame(cbind(unique(american$groups), american_meta_df))
colnames(american_meta_df) <- c('groups', 'effect', 'lower', 'upper')
write.csv(american_meta_df, 'american_meta_estimate.csv', row.names = FALSE, quote = FALSE)
print('Summary Effect for Each Type of Text (k = 6)')
print('-------------------------------------------------')
for(j in category.names){
american.gen <- metagen(TE = yi, seTE = sei, studlab = groups,
data = american %>% filter(category == j),
sm = "MD", fixed = FALSE, random = TRUE)
print(paste(j, ":", round(summary(american.gen)[["TE.random"]], 2),
round(summary(american.gen)[["lower.random"]], 2),
round(summary(american.gen)[["upper.random"]], 2)))
}
print('-------------------------------------------------')
print('Overall Effect Size (k = 48)')
print('-------------------------------------------------')
overall.american.gen <- metagen(TE = yi, seTE = sei, studlab = test,
data = american,
sm = "MD", fixed = FALSE, random = TRUE)
print(paste("categoryal:", round(summary(overall.american.gen)[["TE.random"]], 2),
round(summary(overall.american.gen)[["lower.random"]], 2),
round(summary(overall.american.gen)[["upper.random"]], 2)))
print(paste("Total:", round(summary(overall.american.gen)[["TE.random"]], 2),
round(summary(overall.american.gen)[["lower.random"]], 2),
round(summary(overall.american.gen)[["upper.random"]], 2)))
print('-------------------------------------------------')
# Load meta-analytic estimates calculated using "meta_analysis.R"
superior_meta = read.csv('superior_meta_estimate.csv')
american_meta = read.csv('american_meta_estimate.csv')
# Bind all test results together as a single dataframe
all_tests <- rbind(acad, blog, fic, mag, news, spok, tvm, web)
# Store type of texts as a character vector for later use
category.column <- rep(c('Academic Text', 'Blog', 'Fiction', 'Magazines',
'News Articles', 'Spoken Language', 'TV/Movie Subtitles', 'Web'), each = 12)
# Store type of texts as a character vector for later use
category.column <- rep(c('Academic Text', 'Blog', 'Fiction',
'Magazines', 'News Articles', 'Spoken Language',
'TV/Movie Subtitles', 'Web'), each = 12)
superior <- all_tests %>%
mutate(tot = as.factor(category.column)) %>%
filter(dimension == "Superiority") %>%
rename(yi = effect) %>%
mutate(sei = (yi - lower)/1.96) %>%
arrange(match(groups, c("White v. African Americans",
"White v. Asian Americans",
"White v. Hispanic Americans",
"Asian v. African Americans",
"Asian v. Hispanic Americans",
"African v. Hispanic Americans")))
superior <- all_tests %>%
mutate(tot = as.factor(category.column)) %>%
filter(dimension == "Superiority") %>%
rename(yi = effect) %>%
mutate(sei = (yi - lower)/1.96) %>%
arrange(match(groups, c("White v. African Americans",
"White v. Asian Americans",
"White v. Hispanic Americans",
"Asian v. African Americans",
"Asian v. Hispanic Americans",
"African v. Hispanic Americans")))
pdf(file = "superiority_meta.pdf", width = 18, height = 10)
op <- par(mar = c(7,7,2,2))
plot(1, type="n", xlab="", ylab="",
xlim=c(0.5, 7.7), ylim=c(-1.5, 4.5), axes = FALSE)
box()
mtext(expression(paste("WEAT ", italic(D))), side = 2, line = 5, cex = 1.6)
axis(1, at = c(1.2, 2.4, 3.6, 4.8, 6.0, 7.2),
labels = c("White v. African\nAmericans",
"White v. Asian\nAmericans",
"White v. Hispanic\nAmericans",
"Asian v. African\nAmericans",
"Asian v. Hispanic\nAmericans",
"African v. Hispanic\nAmericans"),
cex.axis = 1.6, padj = 1)
axis(2, at = seq(-1.5, 4.5, by = 0.5),
labels = seq(-1.5, 4.5, by = 0.5),
las = 2,
cex.axis = 1.6)
abline(h = 0, lty = 2)
abline(v = c(1.8, 3.0, 4.2, 5.4, 6.6), lty = 2, lwd = 2.5)
points(seq(1.2, 7.2, by = 1.2),
superior_meta$effect,
pch = 17, cex = 2, col = "black")
segments(x0 = seq(1.2, 7.2, by = 1.2), x1 = seq(1.2, 7.2, by = 1.2),
y0 = superior_meta$lower,
y1 = superior_meta$upper,
lty = 1, lwd = 3, col = "black")
points(seq(0.8, 6.8, by = 1.2),
superior$yi[superior$tot =="Academic Text"],
pch = 16, cex = 1.5, col = "darkgrey")
segments(x0 = seq(0.8, 6.8, by = 1.2), x1 = seq(0.8, 6.8, by = 1.2),
y0 = superior$lower[superior$tot =="Academic Text"],
y1 = superior$upper[superior$tot =="Academic Text"],
lwd = 2, col = "darkgrey", lty = 2)
points(seq(0.9, 6.9, by = 1.2),
superior$yi[superior$tot =="Blog"],
pch = 4, cex = 1.5, col = "darkgrey")
segments(x0 = seq(0.9, 6.9, by = 1.2), x1 = seq(0.9, 6.9, by = 1.2),
y0 = superior$lower[superior$tot =="Blog"],
y1 = superior$upper[superior$tot =="Blog"],
lwd = 2, col = "darkgrey", lty = 2)
points(seq(1.0, 7.0, by = 1.2),
superior$yi[superior$tot =="Fiction"],
pch = 8, cex = 1.5, col = "darkgrey")
segments(x0 = seq(1.0, 7.0, by = 1.2), x1 = seq(1.0, 7.0, by = 1.2),
y0 = superior$lower[superior$tot =="Fiction"],
y1 = superior$upper[superior$tot =="Fiction"],
lwd = 2, col = "darkgrey", lty = 2)
points(seq(1.1, 7.1, by = 1.2),
superior$yi[superior$tot =="Magazines"],
pch = 15, cex = 1.5, col = "darkgrey")
segments(x0 = seq(1.1, 7.1, by = 1.2), x1 = seq(1.1, 7.1, by = 1.2),
y0 = superior$lower[superior$tot =="Magazines"],
y1 = superior$upper[superior$tot =="Magazines"],
lwd = 2, col = "darkgrey", lty = 2)
points(seq(1.3, 7.3, by = 1.2),
superior$yi[superior$tot =="News Articles"],
pch = 1, cex = 1.5, col = "darkgrey")
segments(x0 = seq(1.3, 7.3, by = 1.2), x1 = seq(1.3, 7.3, by = 1.2),
y0 = superior$lower[superior$tot =="News Articles"],
y1 = superior$upper[superior$tot =="News Articles"],
lwd = 2, col = "darkgrey", lty = 2)
points(seq(1.4, 7.4, by = 1.2),
superior$yi[superior$tot =="Spoken Language"],
pch = 5, cex = 1.5, col = "darkgrey")
segments(x0 = seq(1.4, 7.4, by = 1.2), x1 = seq(1.4, 7.4, by = 1.2),
y0 = superior$lower[superior$tot =="Spoken Language"],
y1 = superior$upper[superior$tot =="Spoken Language"],
lwd = 2, col = "darkgrey", lty = 2)
points(seq(1.5, 7.5, by = 1.2),
superior$yi[superior$tot =="TV/Movie Subtitles"],
pch = 0, cex = 1.5, col = "darkgrey")
segments(x0 = seq(1.5, 7.5, by = 1.2), x1 = seq(1.5, 7.5, by = 1.2),
y0 = superior$lower[superior$tot =="TV/Movie Subtitles"],
y1 = superior$upper[superior$tot =="TV/Movie Subtitles"],
lwd = 2, col = "darkgrey", lty = 2)
points(seq(1.6, 7.6, by = 1.2),
superior$yi[superior$tot =="Web"],
pch = 3, cex = 1.5, col = "darkgrey")
segments(x0 = seq(1.6, 7.6, by = 1.2), x1 = seq(1.6, 7.6, by = 1.2),
y0 = superior$lower[superior$tot =="Web"],
y1 = superior$upper[superior$tot =="Web"],
lwd = 2, col = "darkgrey", lty = 2)
legend("bottom", c('Academic Text', 'Blog', 'Fiction', 'Magazines',
"Meta Estimate", 'News Articles', 'Spoken Language',
'TV/Movie Subtitles', 'Web'),
col = c(rep("darkgrey", 4), "black", rep("darkgrey", 4)),
pch = c(16, 4, 8, 15, 17, 1, 5, 0, 3), lwd = 2,
cex = 1.5, pt.cex = c(rep(2, 9)), bg = "white", ncol = 2)
par(op)
dev.off()
# Filter test results pertaining to the Americanness dimension
american <- all_tests %>%
mutate(tot = category.column) %>%
filter(dimension == "Americanness") %>%
rename(yi = effect) %>%
mutate(sei = (yi - lower)/1.96) %>%
arrange(match(groups, c("White v. African Americans",
"White v. Asian Americans",
"White v. Hispanic Americans",
"African v. Asian Americans",
"African v. Hispanic Americans",
"Asian v. Hispanic Americans")))
pdf(file = "americanness_meta.pdf", width = 18, height = 10)
op <- par(mar = c(7,7,2,2))
plot(1, type="n", xlab="", ylab="",
xlim=c(0.5, 7.7), ylim=c(-1.5, 4.5), axes = FALSE)
box()
mtext(expression(paste("WEAT ", italic(D))), side = 2, line = 5, cex = 1.6)
axis(1, at = c(1.2, 2.4, 3.6, 4.8, 6.0, 7.2),
labels = c("White v. African\nAmericans",
"White v. Asian\nAmericans",
"White v. Hispanic\nAmericans",
"African v. Asian\nAmericans",
"African v. Hispanic\nAmericans",
"Asian v. Hispanic\nAmericans"),
cex.axis = 1.6, padj = 1)
axis(2, at = seq(-1.5, 4.5, by = 0.5),
labels = seq(-1.5, 4.5, by = 0.5),
las = 2,
cex.axis = 1.6)
abline(h = 0, lty = 2)
abline(v = c(1.8, 3.0, 4.2, 5.4, 6.6), lty = 2, lwd = 2.5)
points(seq(1.2, 7.2, by = 1.2),
american_meta$effect,
pch = 17, cex = 2, col = "black")
segments(x0 = seq(1.2, 7.2, by = 1.2), x1 = seq(1.2, 7.2, by = 1.2),
y0 = american_meta$lower,
y1 = american_meta$upper,
lty = 1, lwd = 3, col = "black")
points(seq(0.8, 6.8, by = 1.2),
american$yi[american$tot =="Academic Text"],
pch = 16, cex = 1.5, col = "darkgrey")
segments(x0 = seq(0.8, 6.8, by = 1.2), x1 = seq(0.8, 6.8, by = 1.2),
y0 = american$lower[american$tot =="Academic Text"],
y1 = american$upper[american$tot =="Academic Text"],
lwd = 2, col = "darkgrey", lty = 2)
points(seq(0.9, 6.9, by = 1.2),
american$yi[american$tot =="Blog"],
pch = 4, cex = 1.5, col = "darkgrey")
segments(x0 = seq(0.9, 6.9, by = 1.2), x1 = seq(0.9, 6.9, by = 1.2),
y0 = american$lower[american$tot =="Blog"],
y1 = american$upper[american$tot =="Blog"],
lwd = 2, col = "darkgrey", lty = 2)
points(seq(1.0, 7.0, by = 1.2),
american$yi[american$tot =="Fiction"],
pch = 8, cex = 1.5, col = "darkgrey")
segments(x0 = seq(1.0, 7.0, by = 1.2), x1 = seq(1.0, 7.0, by = 1.2),
y0 = american$lower[american$tot =="Fiction"],
y1 = american$upper[american$tot =="Fiction"],
lwd = 2, col = "darkgrey", lty = 2)
points(seq(1.1, 7.1, by = 1.2),
american$yi[american$tot =="Magazines"],
pch = 15, cex = 1.5, col = "darkgrey")
segments(x0 = seq(1.1, 7.1, by = 1.2), x1 = seq(1.1, 7.1, by = 1.2),
y0 = american$lower[american$tot =="Magazines"],
y1 = american$upper[american$tot =="Magazines"],
lwd = 2, col = "darkgrey", lty = 2)
points(seq(1.3, 7.3, by = 1.2),
american$yi[american$tot =="News Articles"],
pch = 1, cex = 1.5, col = "darkgrey")
segments(x0 = seq(1.3, 7.3, by = 1.2), x1 = seq(1.3, 7.3, by = 1.2),
y0 = american$lower[american$tot =="News Articles"],
y1 = american$upper[american$tot =="News Articles"],
lwd = 2, col = "darkgrey", lty = 2)
points(seq(1.4, 7.4, by = 1.2),
american$yi[american$tot =="Spoken Language"],
pch = 5, cex = 1.5, col = "darkgrey")
segments(x0 = seq(1.4, 7.4, by = 1.2), x1 = seq(1.4, 7.4, by = 1.2),
y0 = american$lower[american$tot =="Spoken Language"],
y1 = american$upper[american$tot =="Spoken Language"],
lwd = 2, col = "darkgrey", lty = 2)
points(seq(1.5, 7.5, by = 1.2),
american$yi[american$tot =="TV/Movie Subtitles"],
pch = 0, cex = 1.5, col = "darkgrey")
segments(x0 = seq(1.5, 7.5, by = 1.2), x1 = seq(1.5, 7.5, by = 1.2),
y0 = american$lower[american$tot =="TV/Movie Subtitles"],
y1 = american$upper[american$tot =="TV/Movie Subtitles"],
lwd = 2, col = "darkgrey", lty = 2)
points(seq(1.6, 7.6, by = 1.2),
american$yi[american$tot =="Web"],
pch = 3, cex = 1.5, col = "darkgrey")
segments(x0 = seq(1.6, 7.6, by = 1.2), x1 = seq(1.6, 7.6, by = 1.2),
y0 = american$lower[american$tot =="Web"],
y1 = american$upper[american$tot =="Web"],
lwd = 2, col = "darkgrey", lty = 2)
legend("bottom", c('Academic Text', 'Blog', 'Fiction', 'Magazines',
"Meta Estimate", 'News Articles', 'Spoken Language',
'TV/Movie Subtitles', 'Web'),
col = c(rep("darkgrey", 4), "black", rep("darkgrey", 4)),
pch = c(16, 4, 8, 15, 17, 1, 5, 0, 3), lwd = 2,
cex = 1.5, pt.cex = c(rep(2, 9)), bg = "white", ncol = 2)
par(op)
dev.off()
